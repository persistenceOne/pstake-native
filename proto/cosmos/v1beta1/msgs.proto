syntax = "proto3";
package comsos.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos/v1beta1/cosmos.proto";
import "cosmos/v1beta1/proposal.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/persistenceOne/pStake-native/x/cosmos/types";

service Msg {
  rpc SetOrchestrator(MsgSetOrchestrator) returns (MsgSetOrchestratorResponse) {
    option (google.api.http).post = "/pstake/cosmos/v1beta1/SetOrchestrator";
  }
  rpc Withdraw(MsgWithdrawStkAsset) returns (MsgWithdrawStkAssetResponse) {
    option (google.api.http).post = "/pstake/cosmos/v1beta1/WithdrawStkAssets";
  }
  rpc MintTokensForAccount(MsgMintTokensForAccount) returns (MsgMintTokensForAccountResponse) {
    option (google.api.http).post = "/pstake/cosmos/v1beta1/MintTokensForAccount";
  }
  rpc MakeProposal(MsgMakeProposal) returns (MsgMakeProposalResponse) {
    option (google.api.http).post = "/pstake/cosmos/v1beta1/MakeProposal";
  }
  rpc Vote(MsgVote) returns (MsgVoteResponse) {};
  rpc VoteWeighted(MsgVoteWeighted) returns (MsgVoteWeightedResponse) {};
  rpc SignedTxFromOrchestrator(MsgSignedTx) returns (MsgSignedTxResponse) {};
  rpc TxStatus(MsgTxStatus) returns (MsgTxStatusResponse) {};
}

message MsgSetOrchestrator {
  string validator = 1;
  string orchestrator = 2;
}
message MsgSetOrchestratorResponse {}

message MsgWithdrawStkAsset {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string   from_address = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string   to_address = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
}
message MsgWithdrawStkAssetResponse {}

message MsgVote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.stringer) = false;
  option (gogoproto.goproto_getters) = false;

  uint64 proposal_id = 1 [(gogoproto.jsontag) = "proposal_id", (gogoproto.moretags) = "yaml:\"proposal_id\""];
  string voter = 2;
  VoteOption option = 3;
}
message MsgVoteResponse{}

message MsgVoteWeighted {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.stringer) = false;
  option (gogoproto.goproto_getters) = false;

  uint64                      proposal_id = 1 [(gogoproto.moretags) = "yaml:\"proposal_id\""];
  string                      voter = 2;
  repeated WeightedVoteOption options = 3 [(gogoproto.nullable) = false];
}
message MsgVoteWeightedResponse {}


message MsgMintTokensForAccount {
  string address_from_memo = 1 [(gogoproto.moretags) = "yaml:\"address_from_memo\""];
  string orchestrator_address = 2 [(gogoproto.moretags) = "yaml:\"orchestrator_address\""];
  repeated cosmos.base.v1beta1.Coin amount = 3
  [(gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string tx_hash = 4 [(gogoproto.moretags) = "yaml:\"tx_hash\""];
  string chain_i_d = 5 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  int64 block_height = 6 [(gogoproto.moretags) = "yaml:\"block_height\""];
}

message MsgMintTokensForAccountResponse {}

message MsgMakeProposal {
  string title = 1 [(gogoproto.moretags) = "yaml:\"title\""];
  string description = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string orchestrator_address = 3 [(gogoproto.moretags) = "yaml:\"orchestrator_address\""];
  uint64 proposal_i_d = 4 [(gogoproto.moretags) = "yaml:\"proposal_id\""];
  string chain_i_d = 5 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  int64 block_height = 6 [(gogoproto.moretags) = "yaml:\"block_height\""];
  google.protobuf.Timestamp voting_start_time = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.jsontag) = "voting_start_time,omitempty",
    (gogoproto.moretags) = "yaml:\"voting_start_time\""
  ];
  google.protobuf.Timestamp voting_end_time = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.jsontag) = "voting_end_time,omitempty",
    (gogoproto.moretags) = "yaml:\"voting_end_time\""
  ];
}

message MsgMakeProposalResponse {}

message MsgSignedTx {
  uint64 tx_i_d = 1;
  cosmos.tx.v1beta1.Tx tx = 2 [(gogoproto.nullable) = false];
  string orchestrator_address = 3;
}
message MsgSignedTxResponse {}

message MsgTxStatus {
  string orchestrator_address = 1;
  string txHash = 2;
  //TODO : Handle other errors
  string status = 3;
}
message MsgTxStatusResponse {}
