syntax = "proto3";
package cosmos.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";


option go_package = "github.com/persistenceOne/pStake-native/x/cosmos/types";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all)         = false;
option (gogoproto.goproto_getters_all)  = false;

// VoteOption enumerates the valid vote options for a given governance proposal.
enum VoteOption {
  option (gogoproto.goproto_enum_prefix) = false;

  // VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
  VOTE_OPTION_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "OptionEmpty"];
  // VOTE_OPTION_YES defines a yes vote option.
  VOTE_OPTION_YES = 1 [(gogoproto.enumvalue_customname) = "OptionYes"];
  // VOTE_OPTION_ABSTAIN defines an abstain vote option.
  VOTE_OPTION_ABSTAIN = 2 [(gogoproto.enumvalue_customname) = "OptionAbstain"];
  // VOTE_OPTION_NO defines a no vote option.
  VOTE_OPTION_NO = 3 [(gogoproto.enumvalue_customname) = "OptionNo"];
  // VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  VOTE_OPTION_NO_WITH_VETO = 4 [(gogoproto.enumvalue_customname) = "OptionNoWithVeto"];
}

// WeightedVoteOption defines a unit of vote for vote split.
//
// Since: cosmos-sdk 0.43
message WeightedVoteOption {
  VoteOption option = 1;
  string     weight = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"weight\""
  ];
}

// Proposal defines the core field members of a governance proposal.
message Proposal {
  option (gogoproto.equal) = true;

  uint64              proposal_id        = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
  string  title = 2 [(gogoproto.jsontag) = "title", (gogoproto.moretags) = "yaml:\"title\""];
  string  description = 3 [(gogoproto.jsontag) = "description", (gogoproto.moretags) = "yaml:\"description\""];
  ProposalStatus      status             = 4 [(gogoproto.moretags) = "yaml:\"proposal_status\""];
  TallyResult         final_tally_result = 5
  [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"final_tally_result\""];
  google.protobuf.Timestamp submit_time = 6
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"submit_time\""];
  google.protobuf.Timestamp voting_start_time = 7
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"voting_start_time\""];
  google.protobuf.Timestamp voting_end_time = 8
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"voting_end_time\""];
  uint64 cosmos_proposal_id = 9;
}

// ProposalStatus enumerates the valid statuses of a proposal.
enum ProposalStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
  PROPOSAL_STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "StatusNil"];
  // PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
  // period.
  PROPOSAL_STATUS_VOTING_PERIOD = 1 [(gogoproto.enumvalue_customname) = "StatusVotingPeriod"];
  // PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
  // passed.
  PROPOSAL_STATUS_PASSED = 2 [(gogoproto.enumvalue_customname) = "StatusPassed"];
}

// TallyResult defines a standard tally for a governance proposal.
message TallyResult {
  option (gogoproto.equal) = true;

  string yes     = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string abstain = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string no      = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string no_with_veto = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"no_with_veto\""
  ];
}

// Vote defines a vote on a governance proposal.
// A Vote consists of a proposal ID, the voter, and the vote option.
message Vote {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.equal)            = false;

  uint64 proposal_id = 1 [(gogoproto.moretags) = "yaml:\"proposal_id\""];
  string voter       = 2;
  // Deprecated: Prefer to use `options` instead. This field is set in queries
  // if and only if `len(options) == 1` and that option has weight 1. In all
  // other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
  VoteOption                  option  = 3 [deprecated = true];
  // Since: cosmos-sdk 0.43
  repeated WeightedVoteOption options = 4 [(gogoproto.nullable) = false];
}
