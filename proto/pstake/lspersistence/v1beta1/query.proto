syntax = "proto3";
package pstake.lspersistence.v1beta1;

import "google/api/annotations.proto";
import "pstake/lspersistence/v1beta1/liquidstaking.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/persistenceOne/pstake-native/v2/x/lspersistence/types";

// Query defines the gRPC query service for the liquidstaking module.
service Query {
  // Params returns parameters of the liquidstaking module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/pstake/lspersistence/v1beta1/params";
  }
  // LiquidValidators returns liquid validators with states of the liquidstaking module.
  rpc LiquidValidators(QueryLiquidValidatorsRequest) returns (QueryLiquidValidatorsResponse) {
    option (google.api.http).get = "/pstake/lspersistence/v1beta1/validators";
  }
  // VotingPower returns voting power of staking and liquid staking module's of the voter that can be exercised.
  rpc VotingPower(QueryVotingPowerRequest) returns (QueryVotingPowerResponse) {
    option (google.api.http).get = "/pstake/lspersistence/v1beta1/voting_power/{voter}";
  }

  // States returns states of the liquidstaking module.
  rpc States(QueryStatesRequest) returns (QueryStatesResponse) {
    option (google.api.http).get = "/pstake/lspersistence/v1beta1/states";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryLiquidValidatorsRequest is the request type for the Query/LiquidValidators RPC method.
message QueryLiquidValidatorsRequest {}

// QueryLiquidValidatorsResponse is the response type for the Query/LiquidValidators RPC method.
message QueryLiquidValidatorsResponse {
  repeated LiquidValidatorState liquid_validators = 1 [(gogoproto.nullable) = false];
}

// QueryStatesRequest is the request type for the Query/States RPC method.
message QueryStatesRequest {}

// QueryStatesResponse is the response type for the Query/States RPC method.
message QueryStatesResponse {
  NetAmountState net_amount_state = 1 [(gogoproto.nullable) = false];
}

// QueryVotingPowerRequest is the request type for the Query/States RPC method.
message QueryVotingPowerRequest {
  string voter = 1;
}

// QueryVotingPowerResponse is the response type for the Query/States RPC method.
message QueryVotingPowerResponse {
  VotingPower voting_power = 1 [(gogoproto.nullable) = false];
}
