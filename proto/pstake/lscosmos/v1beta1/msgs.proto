syntax = "proto3";
package pstake.lscosmos.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";


option go_package = "github.com/persistenceOne/pstake-native/x/lscosmos/types";

//Msg defines the lsCosmos services.
service Msg{
  rpc LiquidStake(MsgLiquidStake) returns (MsgLiquidStakeResponse){
    option (google.api.http).post = "/pstake/lscosmos/v1beta1/LiquidStake";
  }

  rpc LiquidUnstake(MsgLiquidUnstake) returns (MsgLiquidUnstakeResponse){
    option (google.api.http).post = "/pstake/lscosmos/v1beta1/LiquidUnstake";
  }

  rpc Juice(MsgJuice) returns (MsgJuiceResponse) {
    option (google.api.http).post = "/pstake/lscosmos/v1beta1/Juice";
  }

  rpc Redeem(MsgRedeem) returns (MsgRedeemResponse) {
    option (google.api.http).post = "/pstake/lscosmos/v1beta1/Redeem";
  }

  rpc Claim(MsgClaim) returns (MsgClaimResponse) {
    option (google.api.http).post = "/pstake/lscosmos/v1beta1/Claim";
  }
}

message MsgLiquidStake {
  string delegator_address = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgLiquidStakeResponse{}


message MsgLiquidUnstake {
  string delegator_address = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgLiquidUnstakeResponse{}

message MsgJuice {
  string rewarder_address = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgJuiceResponse {}

message MsgRedeem {
  string delegator_address = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgRedeemResponse {}

message MsgClaim {
  string delegator_address = 1;
}

message MsgClaimResponse {}
