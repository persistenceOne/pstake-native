syntax = "proto3";
package pstake.lscosmos.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "pstake/lscosmos/v1beta1/params.proto";
import "pstake/lscosmos/v1beta1/governance_proposal.proto";
import "pstake/lscosmos/v1beta1/lscosmos.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/persistenceOne/pstake-native/x/lscosmos/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/params";
  }

  rpc HostChainParams(QueryHostChainParamsRequest) returns (QueryHostChainParamsResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/host_chain_params";
  }

  rpc DelegationState(QueryDelegationStateRequest) returns (QueryDelegationStateResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/delegation_state";
  }

  rpc AllowListedValidators(QueryAllowListedValidatorsRequest) returns (QueryAllowListedValidatorsResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/allow_listed_validators";
  }

  rpc CValue(QueryCValueRequest) returns (QueryCValueResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/c_value";
  }

  rpc ModuleState(QueryModuleStateRequest) returns (QueryModuleStateResponse) {
    option (google.api.http).get = "/pstake/lscosmos/v1beta1/module_state";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryHostChainParamsRequest is request for the Ouery/HostChainParams methods.
message QueryHostChainParamsRequest {}

// QueryHostChainParamsResponse is response for the Ouery/HostChainParams methods.
message QueryHostChainParamsResponse {
  HostChainParams host_chain_params = 1 [(gogoproto.nullable) = false];
}

// QueryDelegationStateRequest is request for the Ouery/DelegationState methods.
message QueryDelegationStateRequest {}

// QueryDelegationStateResponse is response for the Ouery/DelegationState methods.
message QueryDelegationStateResponse {
  DelegationState delegation_state = 1 [(gogoproto.nullable) = false];
}

// QueryListedValidatorsRequest is a request for the Query/AllowListedValidators methods.
message QueryAllowListedValidatorsRequest {}

// QueryListedValidatorsResponse is a response for the Query/AllowListedValidators methods.
message QueryAllowListedValidatorsResponse {
  AllowListedValidators allow_listed_validators = 1 [(gogoproto.nullable) = false];
}

// QueryCValueRequest is a request for the Query/CValue methods.
message QueryCValueRequest {}

// QueryCValueRequest is a response for the Query/CValue methods.
message QueryCValueResponse {
  string c_value = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

// QueryModuleStateRequest is a request for the Query/ModuleState methods.
message QueryModuleStateRequest {}

// QueryModuleStateRequest is a response for the Query/ModuleState methods.
message QueryModuleStateResponse {
  bool module_state = 1;
}
