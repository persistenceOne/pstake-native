syntax = "proto3";
package lscosmos.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "lscosmos/v1beta1/params.proto";
import "lscosmos/v1beta1/governance_proposal.proto";
import "lscosmos/v1beta1/lscosmos.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/persistenceOne/pstake-native/x/lscosmos/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/persistenceOne/pstake-native/lscosmos/params";
  }

  rpc CosmosIBCParams(QueryCosmosIBCParamsRequest) returns (QueryCosmosIBCParamsResponse) {
    option (google.api.http).get = "/persistenceOne/pstake-native/lscosmos/cosmos_ibc_params";
  }

  rpc DelegationState(QueryDelegationStateRequest) returns (QueryDelegationStateResponse) {
    option (google.api.http).get = "/persistenceOne/pstake-native/lscosmos/delegation_state";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryCosmosIBCParamsRequest is request for the Ouery/CosmosIBCParams methods.
message QueryCosmosIBCParamsRequest {}

// QueryCosmosIBCParamsResponse is response for the Ouery/CosmosIBCParams methods.
message QueryCosmosIBCParamsResponse {
  CosmosIBCParams cosmos_i_b_c_params = 1 [(gogoproto.nullable) = false];
}

// QueryDelegationStateRequest is request for the Ouery/DelegationState methods.
message QueryDelegationStateRequest {}

// QueryDelegationStateResponse is response for the Ouery/DelegationState methods.
message QueryDelegationStateResponse {
  DelegationState delegation_state = 1 [(gogoproto.nullable) = false];
}
