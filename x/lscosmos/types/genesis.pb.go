// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pstake/lscosmos/v1beta1/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the lscosmos module's genesis state.
type GenesisState struct {
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	// this line is used by starport scaffolding # genesis/proto/state
	ModuleEnabled                  bool                           `protobuf:"varint,2,opt,name=module_enabled,json=moduleEnabled,proto3" json:"module_enabled,omitempty"`
	HostChainParams                HostChainParams                `protobuf:"bytes,3,opt,name=host_chain_params,json=hostChainParams,proto3" json:"host_chain_params"`
	AllowListedValidators          AllowListedValidators          `protobuf:"bytes,4,opt,name=allow_listed_validators,json=allowListedValidators,proto3" json:"allow_listed_validators"`
	DelegationState                DelegationState                `protobuf:"bytes,5,opt,name=delegation_state,json=delegationState,proto3" json:"delegation_state"`
	HostChainRewardAddress         HostChainRewardAddress         `protobuf:"bytes,6,opt,name=host_chain_reward_address,json=hostChainRewardAddress,proto3" json:"host_chain_reward_address"`
	IBCAmountTransientStore        IBCAmountTransientStore        `protobuf:"bytes,7,opt,name=i_b_c_amount_transient_store,json=iBCAmountTransientStore,proto3" json:"i_b_c_amount_transient_store"`
	UnbondingEpochCValues          []UnbondingEpochCValue         `protobuf:"bytes,8,rep,name=unbonding_epoch_c_values,json=unbondingEpochCValues,proto3" json:"unbonding_epoch_c_values"`
	DelegatorUnbondingEpochEntries []DelegatorUnbondingEpochEntry `protobuf:"bytes,9,rep,name=delegator_unbonding_epoch_entries,json=delegatorUnbondingEpochEntries,proto3" json:"delegator_unbonding_epoch_entries"`
	HostAccounts                   HostAccounts                   `protobuf:"bytes,10,opt,name=host_accounts,json=hostAccounts,proto3" json:"host_accounts"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8a773682684460, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetModuleEnabled() bool {
	if m != nil {
		return m.ModuleEnabled
	}
	return false
}

func (m *GenesisState) GetHostChainParams() HostChainParams {
	if m != nil {
		return m.HostChainParams
	}
	return HostChainParams{}
}

func (m *GenesisState) GetAllowListedValidators() AllowListedValidators {
	if m != nil {
		return m.AllowListedValidators
	}
	return AllowListedValidators{}
}

func (m *GenesisState) GetDelegationState() DelegationState {
	if m != nil {
		return m.DelegationState
	}
	return DelegationState{}
}

func (m *GenesisState) GetHostChainRewardAddress() HostChainRewardAddress {
	if m != nil {
		return m.HostChainRewardAddress
	}
	return HostChainRewardAddress{}
}

func (m *GenesisState) GetIBCAmountTransientStore() IBCAmountTransientStore {
	if m != nil {
		return m.IBCAmountTransientStore
	}
	return IBCAmountTransientStore{}
}

func (m *GenesisState) GetUnbondingEpochCValues() []UnbondingEpochCValue {
	if m != nil {
		return m.UnbondingEpochCValues
	}
	return nil
}

func (m *GenesisState) GetDelegatorUnbondingEpochEntries() []DelegatorUnbondingEpochEntry {
	if m != nil {
		return m.DelegatorUnbondingEpochEntries
	}
	return nil
}

func (m *GenesisState) GetHostAccounts() HostAccounts {
	if m != nil {
		return m.HostAccounts
	}
	return HostAccounts{}
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "pstake.lscosmos.v1beta1.GenesisState")
}

func init() {
	proto.RegisterFile("pstake/lscosmos/v1beta1/genesis.proto", fileDescriptor_8e8a773682684460)
}

var fileDescriptor_8e8a773682684460 = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0x87, 0x63, 0x5a, 0xda, 0xb2, 0x6d, 0xf9, 0x63, 0x01, 0x35, 0x15, 0x72, 0x03, 0x22, 0x28,
	0x97, 0xda, 0xa4, 0x08, 0x89, 0x0b, 0x87, 0x34, 0x44, 0x80, 0x84, 0x44, 0x95, 0x42, 0x25, 0x7a,
	0x59, 0xad, 0xed, 0x91, 0xbd, 0xc2, 0xd9, 0xb5, 0x76, 0xd6, 0x29, 0x7d, 0x01, 0xce, 0x3c, 0x56,
	0x25, 0x2e, 0x3d, 0x72, 0x42, 0x28, 0x79, 0x11, 0xe4, 0xb5, 0x13, 0x1a, 0x14, 0x93, 0x5b, 0x34,
	0xf3, 0xfb, 0xfc, 0x79, 0x66, 0x22, 0x93, 0x56, 0x86, 0x9a, 0x7d, 0x01, 0x3f, 0xc5, 0x50, 0xe2,
	0x50, 0xa2, 0x3f, 0xea, 0x04, 0xa0, 0x59, 0xc7, 0x8f, 0x41, 0x00, 0x72, 0xf4, 0x32, 0x25, 0xb5,
	0xb4, 0x77, 0xca, 0x98, 0x37, 0x8d, 0x79, 0x55, 0x6c, 0xf7, 0x6e, 0x2c, 0x63, 0x69, 0x32, 0x7e,
	0xf1, 0xab, 0x8c, 0xef, 0x3e, 0xa9, 0x7b, 0x6a, 0xc6, 0x14, 0x1b, 0x56, 0x0f, 0xdd, 0x7d, 0x5a,
	0x97, 0x9a, 0x59, 0xca, 0x5c, 0xa7, 0xf6, 0x1d, 0xe5, 0x08, 0x94, 0x60, 0x22, 0x04, 0x9a, 0x29,
	0x99, 0x49, 0x64, 0x69, 0x89, 0x3c, 0xfe, 0xb1, 0x4e, 0xb6, 0xde, 0x94, 0x13, 0x1c, 0x6b, 0xa6,
	0xc1, 0x7e, 0x45, 0xd6, 0x4a, 0xb7, 0x63, 0x35, 0xad, 0xf6, 0xe6, 0xc1, 0x9e, 0x57, 0x33, 0x91,
	0x77, 0x64, 0x62, 0x87, 0xab, 0x17, 0xbf, 0xf6, 0x1a, 0x83, 0x0a, 0xb2, 0x5b, 0xe4, 0xe6, 0x50,
	0x46, 0x79, 0x0a, 0x14, 0x04, 0x0b, 0x52, 0x88, 0x9c, 0x6b, 0x4d, 0xab, 0xbd, 0x31, 0xd8, 0x2e,
	0xab, 0xfd, 0xb2, 0x68, 0x9f, 0x92, 0x3b, 0x89, 0x44, 0x4d, 0xc3, 0x84, 0x71, 0x41, 0x2b, 0xe1,
	0x8a, 0x11, 0xb6, 0x6b, 0x85, 0x6f, 0x25, 0xea, 0x5e, 0x01, 0xcc, 0x99, 0x6f, 0x25, 0xf3, 0x65,
	0x3b, 0x25, 0x3b, 0x2c, 0x4d, 0xe5, 0x19, 0x4d, 0x39, 0x6a, 0x88, 0xe8, 0x88, 0xa5, 0x3c, 0x62,
	0x5a, 0x2a, 0x74, 0x56, 0x8d, 0xc1, 0xab, 0x35, 0x74, 0x0b, 0xee, 0xbd, 0xc1, 0x4e, 0x66, 0x54,
	0xe5, 0xb9, 0xc7, 0x16, 0x35, 0xed, 0xcf, 0xe4, 0x76, 0x04, 0x29, 0xc4, 0x4c, 0x73, 0x29, 0x28,
	0x16, 0x3b, 0x74, 0xae, 0x2f, 0x19, 0xe4, 0xf5, 0x0c, 0x30, 0x3b, 0x9f, 0x0e, 0x12, 0xcd, 0x97,
	0xed, 0x8c, 0x3c, 0xb8, 0xb2, 0x24, 0x05, 0x67, 0x4c, 0x45, 0x94, 0x45, 0x91, 0x02, 0x44, 0x67,
	0xcd, 0x38, 0xfc, 0xe5, 0xcb, 0x1a, 0x18, 0xae, 0x5b, 0x62, 0x95, 0xea, 0x7e, 0xb2, 0xb0, 0x6b,
	0xe7, 0xe4, 0x21, 0xa7, 0x01, 0x0d, 0x29, 0x1b, 0xca, 0x5c, 0x68, 0xaa, 0x15, 0x13, 0xc8, 0x41,
	0x68, 0x8a, 0x5a, 0x2a, 0x70, 0xd6, 0x8d, 0xf4, 0x59, 0xad, 0xf4, 0xdd, 0x61, 0xaf, 0x6b, 0xc8,
	0x8f, 0x53, 0xf0, 0xb8, 0xe0, 0x2a, 0xeb, 0x0e, 0x5f, 0xdc, 0xb6, 0x53, 0xe2, 0xe4, 0x22, 0x90,
	0x22, 0xe2, 0x22, 0xa6, 0x90, 0xc9, 0x30, 0xa1, 0x61, 0x71, 0xb6, 0x1c, 0xd0, 0xd9, 0x68, 0xae,
	0xb4, 0x37, 0x0f, 0xf6, 0x6b, 0x95, 0x9f, 0xa6, 0x60, 0xbf, 0xe0, 0x7a, 0x27, 0x05, 0x35, 0xbd,
	0x58, 0xbe, 0xa0, 0x87, 0xf6, 0x37, 0x8b, 0x3c, 0xaa, 0x56, 0x2d, 0x15, 0xfd, 0x57, 0x0c, 0x42,
	0x2b, 0x0e, 0xe8, 0xdc, 0x30, 0xde, 0x17, 0xcb, 0x6e, 0x28, 0xd5, 0xfc, 0x0b, 0xf4, 0x85, 0x56,
	0xe7, 0x95, 0xdf, 0x8d, 0xea, 0x33, 0x1c, 0xd0, 0x3e, 0x22, 0xdb, 0xe6, 0xbe, 0x2c, 0x0c, 0x8b,
	0xa5, 0xa0, 0x43, 0xcc, 0x7a, 0x5b, 0xff, 0xbd, 0x69, 0xb7, 0x0a, 0x57, 0x8e, 0xad, 0xe4, 0x6a,
	0x6d, 0x70, 0x31, 0x76, 0xad, 0xcb, 0xb1, 0x6b, 0xfd, 0x1e, 0xbb, 0xd6, 0xf7, 0x89, 0xdb, 0xb8,
	0x9c, 0xb8, 0x8d, 0x9f, 0x13, 0xb7, 0x71, 0xfa, 0x32, 0xe6, 0x3a, 0xc9, 0x03, 0x2f, 0x94, 0x43,
	0x3f, 0x03, 0x85, 0xc5, 0xdf, 0x58, 0x84, 0xf0, 0x41, 0x80, 0x5f, 0xda, 0xf6, 0x05, 0xd3, 0x7c,
	0x04, 0xfe, 0xd7, 0xbf, 0x5f, 0x0f, 0x7d, 0x9e, 0x01, 0x06, 0x6b, 0xe6, 0x43, 0xf1, 0xfc, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x44, 0x56, 0xe0, 0x01, 0x05, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.HostAccounts.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	if len(m.DelegatorUnbondingEpochEntries) > 0 {
		for iNdEx := len(m.DelegatorUnbondingEpochEntries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DelegatorUnbondingEpochEntries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.UnbondingEpochCValues) > 0 {
		for iNdEx := len(m.UnbondingEpochCValues) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UnbondingEpochCValues[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	{
		size, err := m.IBCAmountTransientStore.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size, err := m.HostChainRewardAddress.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size, err := m.DelegationState.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size, err := m.AllowListedValidators.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size, err := m.HostChainParams.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ModuleEnabled {
		i--
		if m.ModuleEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if m.ModuleEnabled {
		n += 2
	}
	l = m.HostChainParams.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.AllowListedValidators.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.DelegationState.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.HostChainRewardAddress.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.IBCAmountTransientStore.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.UnbondingEpochCValues) > 0 {
		for _, e := range m.UnbondingEpochCValues {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.DelegatorUnbondingEpochEntries) > 0 {
		for _, e := range m.DelegatorUnbondingEpochEntries {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	l = m.HostAccounts.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ModuleEnabled = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostChainParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.HostChainParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowListedValidators", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AllowListedValidators.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostChainRewardAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.HostChainRewardAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IBCAmountTransientStore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IBCAmountTransientStore.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEpochCValues", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingEpochCValues = append(m.UnbondingEpochCValues, UnbondingEpochCValue{})
			if err := m.UnbondingEpochCValues[len(m.UnbondingEpochCValues)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorUnbondingEpochEntries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorUnbondingEpochEntries = append(m.DelegatorUnbondingEpochEntries, DelegatorUnbondingEpochEntry{})
			if err := m.DelegatorUnbondingEpochEntries[len(m.DelegatorUnbondingEpochEntries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostAccounts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.HostAccounts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
