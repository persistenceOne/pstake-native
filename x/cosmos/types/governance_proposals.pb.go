// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/v1beta1/governance_proposals.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Proposal defines the core field members of a governance proposal.
//message ChangeCosmosValidatorWeightsProposal {
//
//}
//message ChangeOracleValidatorWeightsProposal{
//
//}
type ChangeMultisigProposal struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Threshold            uint32   `protobuf:"varint,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
	OrcastratorAddresses []string `protobuf:"bytes,4,rep,name=orcastrator_addresses,json=orcastratorAddresses,proto3" json:"orcastrator_addresses,omitempty"`
	AccountNumber        uint64   `protobuf:"varint,5,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
}

func (m *ChangeMultisigProposal) Reset()      { *m = ChangeMultisigProposal{} }
func (*ChangeMultisigProposal) ProtoMessage() {}
func (*ChangeMultisigProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5f7c14866ddb7d4, []int{0}
}
func (m *ChangeMultisigProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChangeMultisigProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChangeMultisigProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChangeMultisigProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeMultisigProposal.Merge(m, src)
}
func (m *ChangeMultisigProposal) XXX_Size() int {
	return m.Size()
}
func (m *ChangeMultisigProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeMultisigProposal.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeMultisigProposal proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ChangeMultisigProposal)(nil), "comsos.v1beta1.ChangeMultisigProposal")
}

func init() {
	proto.RegisterFile("cosmos/v1beta1/governance_proposals.proto", fileDescriptor_e5f7c14866ddb7d4)
}

var fileDescriptor_e5f7c14866ddb7d4 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcd, 0x6e, 0xd4, 0x30,
	0x14, 0x85, 0x63, 0xda, 0x22, 0x4d, 0x50, 0xbb, 0x88, 0x06, 0x14, 0x46, 0x95, 0x89, 0x90, 0x90,
	0xc2, 0x82, 0xb1, 0xaa, 0x4a, 0xec, 0x81, 0x35, 0x3f, 0x0a, 0x3b, 0x36, 0x83, 0xe3, 0x5c, 0x1c,
	0x8b, 0xc4, 0xd7, 0xf2, 0xbd, 0x19, 0xd1, 0x1d, 0x8f, 0xc0, 0x63, 0xf0, 0x28, 0x15, 0xab, 0x2e,
	0xbb, 0xa4, 0x99, 0x17, 0x41, 0xcd, 0x04, 0x51, 0xb1, 0xf3, 0xf9, 0xbe, 0x23, 0xeb, 0xc8, 0x4e,
	0x9f, 0x1b, 0xa4, 0x1e, 0x49, 0x6d, 0xcf, 0x6a, 0x60, 0x7d, 0xa6, 0x2c, 0x6e, 0x21, 0x7a, 0xed,
	0x0d, 0x6c, 0x42, 0xc4, 0x80, 0xa4, 0x3b, 0x5a, 0x87, 0x88, 0x8c, 0xd9, 0x89, 0xc1, 0x9e, 0x90,
	0xd6, 0x73, 0x75, 0xb5, 0xb4, 0x68, 0x71, 0x52, 0xea, 0xf6, 0xb4, 0x6f, 0xad, 0x4e, 0x2d, 0xa2,
	0xed, 0x40, 0xe9, 0xe0, 0x94, 0xf6, 0x1e, 0x59, 0xb3, 0x43, 0x3f, 0xdf, 0xb1, 0x7a, 0x3c, 0xdb,
	0x29, 0xd5, 0xc3, 0x17, 0xa5, 0xfd, 0xc5, 0xac, 0x9e, 0xfc, 0xaf, 0xd8, 0xf5, 0x40, 0xac, 0xfb,
	0xb0, 0x2f, 0x3c, 0xfd, 0x25, 0xd2, 0x47, 0x6f, 0x5a, 0xed, 0x2d, 0xbc, 0x1d, 0x3a, 0x76, 0xe4,
	0xec, 0x87, 0x79, 0x61, 0xb6, 0x4c, 0x8f, 0xd8, 0x71, 0x07, 0xb9, 0x28, 0x44, 0xb9, 0xa8, 0xf6,
	0x21, 0x2b, 0xd2, 0x07, 0x0d, 0x90, 0x89, 0x2e, 0xdc, 0x4e, 0xc8, 0xef, 0x4d, 0xee, 0x2e, 0xca,
	0x4e, 0xd3, 0x05, 0xb7, 0x11, 0xa8, 0xc5, 0xae, 0xc9, 0x0f, 0x0a, 0x51, 0x1e, 0x57, 0xff, 0x40,
	0x76, 0x9e, 0x3e, 0xc4, 0x68, 0x34, 0x71, 0xd4, 0x8c, 0x71, 0xa3, 0x9b, 0x26, 0x02, 0x11, 0x50,
	0x7e, 0x58, 0x1c, 0x94, 0x8b, 0x6a, 0x79, 0x47, 0xbe, 0xfa, 0xeb, 0xb2, 0x67, 0xe9, 0x89, 0x36,
	0x06, 0x07, 0xcf, 0x1b, 0x3f, 0xf4, 0x35, 0xc4, 0xfc, 0xa8, 0x10, 0xe5, 0x61, 0x75, 0x3c, 0xd3,
	0x77, 0x13, 0x7c, 0xfd, 0xf9, 0xf2, 0x46, 0x26, 0xd7, 0x37, 0x32, 0xf9, 0x3e, 0xca, 0xe4, 0xe7,
	0x28, 0xc5, 0xe5, 0x28, 0xc5, 0xd5, 0x28, 0xc5, 0xef, 0x51, 0x8a, 0x1f, 0x3b, 0x99, 0x5c, 0xed,
	0x64, 0x72, 0xbd, 0x93, 0xc9, 0xa7, 0x97, 0xd6, 0x71, 0x3b, 0xd4, 0x6b, 0x83, 0xbd, 0x0a, 0x10,
	0xc9, 0x11, 0x83, 0x37, 0xf0, 0xde, 0x83, 0x0a, 0x1f, 0x59, 0x7f, 0x85, 0x17, 0x5e, 0xb3, 0xdb,
	0x82, 0xfa, 0xa6, 0xe6, 0xbf, 0xe4, 0x8b, 0x00, 0x54, 0xdf, 0x9f, 0x5e, 0xed, 0xfc, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xdc, 0x67, 0x22, 0x03, 0xe2, 0x01, 0x00, 0x00,
}

func (this *ChangeMultisigProposal) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ChangeMultisigProposal)
	if !ok {
		that2, ok := that.(ChangeMultisigProposal)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Title != that1.Title {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if this.Threshold != that1.Threshold {
		return false
	}
	if len(this.OrcastratorAddresses) != len(that1.OrcastratorAddresses) {
		return false
	}
	for i := range this.OrcastratorAddresses {
		if this.OrcastratorAddresses[i] != that1.OrcastratorAddresses[i] {
			return false
		}
	}
	if this.AccountNumber != that1.AccountNumber {
		return false
	}
	return true
}
func (m *ChangeMultisigProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChangeMultisigProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChangeMultisigProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AccountNumber != 0 {
		i = encodeVarintGovernanceProposals(dAtA, i, uint64(m.AccountNumber))
		i--
		dAtA[i] = 0x28
	}
	if len(m.OrcastratorAddresses) > 0 {
		for iNdEx := len(m.OrcastratorAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OrcastratorAddresses[iNdEx])
			copy(dAtA[i:], m.OrcastratorAddresses[iNdEx])
			i = encodeVarintGovernanceProposals(dAtA, i, uint64(len(m.OrcastratorAddresses[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Threshold != 0 {
		i = encodeVarintGovernanceProposals(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintGovernanceProposals(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintGovernanceProposals(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGovernanceProposals(dAtA []byte, offset int, v uint64) int {
	offset -= sovGovernanceProposals(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ChangeMultisigProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovGovernanceProposals(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovGovernanceProposals(uint64(l))
	}
	if m.Threshold != 0 {
		n += 1 + sovGovernanceProposals(uint64(m.Threshold))
	}
	if len(m.OrcastratorAddresses) > 0 {
		for _, s := range m.OrcastratorAddresses {
			l = len(s)
			n += 1 + l + sovGovernanceProposals(uint64(l))
		}
	}
	if m.AccountNumber != 0 {
		n += 1 + sovGovernanceProposals(uint64(m.AccountNumber))
	}
	return n
}

func sovGovernanceProposals(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGovernanceProposals(x uint64) (n int) {
	return sovGovernanceProposals(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ChangeMultisigProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGovernanceProposals
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChangeMultisigProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChangeMultisigProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrcastratorAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrcastratorAddresses = append(m.OrcastratorAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountNumber", wireType)
			}
			m.AccountNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGovernanceProposals(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGovernanceProposals
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGovernanceProposals(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGovernanceProposals
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGovernanceProposals
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGovernanceProposals
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGovernanceProposals
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGovernanceProposals
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGovernanceProposals        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGovernanceProposals          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGovernanceProposals = fmt.Errorf("proto: unexpected end of group")
)
